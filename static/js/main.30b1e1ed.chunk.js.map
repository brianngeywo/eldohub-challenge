{"version":3,"sources":["logo.svg","components/core/CategoriesList.js","App.js","reportWebVitals.js","index.js"],"names":["CategoriesList","state","categories","data","axios","get","then","res","setState","this","click","bind","event","isLoading","response","catch","err","Container","maxWidth","style","boxShadow","backgroundColor","map","category","Button","onClick","id","value","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAe,I,sCCKMA,E,4MACnBC,MAAQ,CACNC,WAAY,GACZC,KAAM,I,kEAGa,IAAD,OAClBC,IAAMC,IAAN,+CACGC,MAAK,SAAAC,GACJ,IAAML,EAAaK,EAAIJ,KACvB,EAAKK,SAAS,CAAEN,kBAEpBO,KAAKC,MAAQD,KAAKC,MAAMC,KAAKF,Q,4BAGzBG,GAAQ,IAAD,OACXH,KAAKD,SAAS,CAAEK,WAAW,IAE3BT,IAAMC,IAAI,oDAAsDI,KAAKR,MAAMC,WAAY,IACpFI,MAAK,SAACQ,GACL,EAAKN,SAAS,CACZL,KAAMW,EAASX,KACfU,WAAW,OAGdE,OAAM,SAACC,GACN,EAAKR,SAAS,CAAEL,KAAMa,EAAKH,WAAW,S,+BAIlC,IAAD,OACP,OACE,eAACI,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,qBACFC,MAAO,CACLC,UAAW,iCACXC,gBAAiB,WAHjB,UAKGZ,KAAKR,MAAMC,WAAWoB,KAAI,SAAAC,GAAQ,OAAI,cAACC,EAAA,EAAD,CAAQC,QAAS,EAAKf,MAAtB,SAA8Da,GAA5B,EAAKtB,MAAMC,WAAWwB,OAA0B,uBACzH,0BAEDjB,KAAKR,MAAME,KAAKwB,a,GAzCmBC,IAAMC,WCA7BC,E,uKAGjB,OACE,8BACI,cAAC,EAAD,U,GALuBF,IAAMC,WCOxBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.30b1e1ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport axios from 'axios';\nimport { Button, Container } from '@material-ui/core';\n\n\nexport default class CategoriesList extends React.Component {\n  state = {\n    categories: [],\n    data: [],\n  }\n\n  componentDidMount() {\n    axios.get(`https://api.chucknorris.io/jokes/categories`)\n      .then(res => {\n        const categories = res.data;\n        this.setState({ categories });\n      })\n    this.click = this.click.bind(this);\n  }\n\n  click(event) {\n    this.setState({ isLoading: true });\n\n    axios.get(\"https://api.chucknorris.io/jokes/random?category=\" + this.state.categories, {})\n      .then((response) => {\n        this.setState({\n          data: response.data,\n          isLoading: false,\n        });\n      })\n      .catch((err) => {\n        this.setState({ data: err, isLoading: false });\n      });\n  }\n\n  render() {\n    return (\n      <Container maxWidth=\"lg\">\n        <ul\n      style={{\n        boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n        backgroundColor: \"#fafafa\",\n      }}>\n          {this.state.categories.map(category => <Button onClick={this.click} key={this.state.categories.id} >{category}</Button>)}<br />\n          <br />\n        </ul>\n        {this.state.data.value}\n      </Container>\n    )\n  }\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport CategoriesList from './components/core/CategoriesList'\n\nexport default class App extends React.Component {\n  \n  render() {\n    return (\n      <div>\n          <CategoriesList/>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}